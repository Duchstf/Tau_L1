// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tau_nn_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config20_s (
        ap_clk,
        ap_rst,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [8:0] p_read;
input  [8:0] p_read1;
input  [8:0] p_read2;
input  [8:0] p_read3;
output  [13:0] ap_return;
input   ap_ce;

reg[13:0] ap_return;

reg   [10:0] tmp_reg_273;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [10:0] tmp_17_reg_278;
reg   [10:0] trunc_ln_reg_283;
reg   [9:0] tmp_18_reg_288;
wire   [8:0] r_V_177_fu_68_p0;
wire  signed [9:0] r_V_177_fu_68_p1;
wire    ap_block_pp0_stage0;
wire   [8:0] r_V_fu_69_p0;
wire   [10:0] r_V_fu_69_p1;
wire   [8:0] r_V_178_fu_70_p0;
wire   [9:0] r_V_178_fu_70_p1;
wire   [8:0] r_V_176_fu_71_p0;
wire   [10:0] r_V_176_fu_71_p1;
wire   [18:0] r_V_fu_69_p2;
wire   [18:0] r_V_176_fu_71_p2;
wire   [18:0] r_V_177_fu_68_p2;
wire   [17:0] r_V_178_fu_70_p2;
wire   [11:0] trunc_ln864_cast_fu_225_p1;
wire   [11:0] trunc_ln864_1_cast_fu_228_p1;
wire   [11:0] add_ln859_fu_237_p2;
wire   [10:0] zext_ln859_fu_234_p1;
wire   [10:0] add_ln859_398_fu_247_p2;
wire   [12:0] zext_ln859_102_fu_253_p1;
wire  signed [12:0] sext_ln70_fu_231_p1;
wire   [12:0] add_ln859_399_fu_257_p2;
wire  signed [13:0] sext_ln859_fu_263_p1;
wire   [13:0] zext_ln859_101_fu_243_p1;
wire   [13:0] add_ln859_400_fu_267_p2;
reg    ap_ce_reg;
reg   [13:0] ap_return_int_reg;
wire   [18:0] r_V_176_fu_71_p00;
wire   [18:0] r_V_177_fu_68_p00;
wire   [17:0] r_V_178_fu_70_p00;
wire   [18:0] r_V_fu_69_p00;

tau_nn_mul_9ns_10s_19_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_9ns_10s_19_1_0_U614(
    .din0(r_V_177_fu_68_p0),
    .din1(r_V_177_fu_68_p1),
    .dout(r_V_177_fu_68_p2)
);

tau_nn_mul_9ns_11ns_19_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_0_U615(
    .din0(r_V_fu_69_p0),
    .din1(r_V_fu_69_p1),
    .dout(r_V_fu_69_p2)
);

tau_nn_mul_9ns_10ns_18_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
mul_9ns_10ns_18_1_0_U616(
    .din0(r_V_178_fu_70_p0),
    .din1(r_V_178_fu_70_p1),
    .dout(r_V_178_fu_70_p2)
);

tau_nn_mul_9ns_11ns_19_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_0_U617(
    .din0(r_V_176_fu_71_p0),
    .din1(r_V_176_fu_71_p1),
    .dout(r_V_176_fu_71_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= add_ln859_400_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        tmp_17_reg_278 <= {{r_V_176_fu_71_p2[18:8]}};
        tmp_18_reg_288 <= {{r_V_178_fu_70_p2[17:8]}};
        tmp_reg_273 <= {{r_V_fu_69_p2[18:8]}};
        trunc_ln_reg_283 <= {{r_V_177_fu_68_p2[18:8]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = add_ln859_400_fu_267_p2;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln859_398_fu_247_p2 = (zext_ln859_fu_234_p1 + 11'd242);

assign add_ln859_399_fu_257_p2 = ($signed(zext_ln859_102_fu_253_p1) + $signed(sext_ln70_fu_231_p1));

assign add_ln859_400_fu_267_p2 = ($signed(sext_ln859_fu_263_p1) + $signed(zext_ln859_101_fu_243_p1));

assign add_ln859_fu_237_p2 = (trunc_ln864_cast_fu_225_p1 + trunc_ln864_1_cast_fu_228_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign r_V_176_fu_71_p0 = r_V_176_fu_71_p00;

assign r_V_176_fu_71_p00 = p_read1;

assign r_V_176_fu_71_p1 = 19'd755;

assign r_V_177_fu_68_p0 = r_V_177_fu_68_p00;

assign r_V_177_fu_68_p00 = p_read2;

assign r_V_177_fu_68_p1 = 19'd523810;

assign r_V_178_fu_70_p0 = r_V_178_fu_70_p00;

assign r_V_178_fu_70_p00 = p_read3;

assign r_V_178_fu_70_p1 = 18'd393;

assign r_V_fu_69_p0 = r_V_fu_69_p00;

assign r_V_fu_69_p00 = p_read;

assign r_V_fu_69_p1 = 19'd607;

assign sext_ln70_fu_231_p1 = $signed(trunc_ln_reg_283);

assign sext_ln859_fu_263_p1 = $signed(add_ln859_399_fu_257_p2);

assign trunc_ln864_1_cast_fu_228_p1 = tmp_17_reg_278;

assign trunc_ln864_cast_fu_225_p1 = tmp_reg_273;

assign zext_ln859_101_fu_243_p1 = add_ln859_fu_237_p2;

assign zext_ln859_102_fu_253_p1 = add_ln859_398_fu_247_p2;

assign zext_ln859_fu_234_p1 = tmp_18_reg_288;

endmodule //tau_nn_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config20_s
